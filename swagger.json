{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "Simple API",
    "description":
      "This API shows the documentation of different routes present in my Project"
  },
  "schemes": ["http"],
  "host": "localhost:5000",
  "basePath": "/",
  "paths": {
    "/api/users/test": {
      "get": {
        "summary": "Test",
        "description": "Test whether it executes",
        "responses": {
          "200": {
            "description": "Page executes"
          }
        }
      }
    },
    "/api/users/register": {
      "post": {
        "summary": "Register User",
        "description": "Add user into db",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserRegister"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "user added"
          },
          "400": {
            "description": "vaidation error"
          },
          "404": {
            "description": "connection error"
          }
        }
      }
    },

    "/api/users/login": {
      "post": {
        "summary": "Login User",
        "description": "User Logs in",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserLogin"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User Logged in"
          },
          "400": {
            "description": "Wrong input details"
          },
          "404": {
            "description": "connection error"
          }
        }
      }
    },

    "/api/users/{id}": {
      "get": {
        "summary": "Return user info from id",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Return user info"
          },

          "404": {
            "description": "User not found"
          }
        }
      }
    },

    "/api/profile/all": {
      "get": {
        "summary": "Show all user profiles",
        "responses": {
          "200": {
            "description": "Shows all user profiles"
          },
          "404": {
            "description": "Page does not exist"
          },
          "400": {
            "description": "No user profile exists"
          }
        }
      }
    },

    "/api/posts": {
      "get": {
        "summary": "Get posts with respect to date",
        "responses": {
          "200": {
            "description": "Displays all the posts"
          },
          "400": {
            "description": "No posts have yet been posted"
          },
          "404": {
            "description": "Page does not exist"
          }
        }
      }
    },

    "/api/posts/{postId}": {
      "get": {
        "summary": "Retrieves post on id",
        "parameters": [
          {
            "name": "postid",
            "in": "path",
            "description": "id of the post",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Displays the post"
          },

          "404": {
            "description": "Post Not Found"
          }
        }
      }
    },

    "/api/profile/{handle}": {
      "get": {
        "description": "Gets user profile from handle",
        "parameters": [
          {
            "name": "handle",
            "in": "path",
            "description": "handle of the user",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Displays the user profile"
          },

          "404": {
            "description": "Profile not Found"
          }
        }
      }
    }
  },
  "definitions": {
    "UserRegister": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "password2": {
          "type": "string"
        }
      }
    },
    "UserLogin": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      }
    }
  }
}
